buildscript {
  repositories {
    jcenter()
    // enable this to use snapshot versions of Gretty:
    // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

repositories {
  jcenter()
  // enable this to use snapshot versions of Gretty:
  // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

apply plugin: 'org.akhikhl.gretty'


sourceCompatibility = 1.6
targetCompatibility = 1.6
	
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'commons-io', name: 'commons-io', version: '1.4'
	compile group: 'log4j', name: 'log4j', version: '1.2.15', ext: 'jar'
	compile 'org.webjars:bootstrap:3.2.0'

	compile group: 'com.google.guava', name: 'guava', version: '19.0'
	
	compile group: 'cz.incad.kramerius', name: 'common', version: '5.3.5',  changing: true
	compile group: 'cz.incad.kramerius', name: 'mw-process', version: '5.3.5', changing: true
	
	compile 'org.webjars:bootstrap:3.2.0'
  	compile 'org.webjars:jquery:2.1.1'	

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


war {
	archiveName 'oaitransform.war'
}
